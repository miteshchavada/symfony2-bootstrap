<?php

namespace Acme\ImageBundle\Controller;

use Symfony\Component\HttpFoundation\Session\Session;
use Symfony\Component\HttpFoundation\Request;

use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Acme\StoreBundle\Entity\Product;
use Symfony\Component\HttpFoundation\Response;

use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template;


class DefaultController extends Controller
{
    public function indexAction()
    {
        $image = $this->get('doctrine')->getRepository('AcmeImageBundle:Image')->findAll();
    	return $this->render('AcmeImageBundle:Default:index.html.twig',array('image'=>$image));
    }
    public function addAction(Request $request)
    {
        $image = new \Acme\ImageBundle\Entity\Image();
        $image->setImage('');
        $form = $this->createFormBuilder($image)
                ->add('image','file')
                ->getForm();
        $form->handleRequest($request);
        $validator = $this->get('validator');
	$errors = $validator->validate($image);
        if (count($errors) > 0) {
            return $this->render('AcmeImageBundle:Default:add.html.twig', array('form' => $form->createView()));
        }
        else
        {
           $dir = $_SERVER['DOCUMENT_ROOT'].'/uploads';
           $a = $request->request->get('form');
           $og_image = rand().'_'.$form['image']->getData()->getClientOriginalName();
           $image = new \Acme\ImageBundle\Entity\Image();
           $image->setImage($og_image);
           $em = $this->getDoctrine()->getManager();
	   $em->persist($image);
           $em->flush();
           $form->get('image')->getData()->move($dir,$og_image);
           return $this->redirect($this->generateUrl('acme_image'));
        }
        return $this->render('AcmeImageBundle:Default:add.html.twig', array(
            'form' => $form->createView(),
        ));
    }
    
    public function deleteAction(Request $request)
    {
        $id = $request->get('id');
	$em = $this->getDoctrine()->getManager();
        $image = $em->getRepository('AcmeImageBundle:Image')->find($id);
        $em->remove($image);
        $em->flush();
        unlink($_SERVER['DOCUMENT_ROOT'].'/uploads/'.$image->getImage());
        return $this->redirect($this->generateUrl('acme_image'));
    }
    
    public function editAction(Request $request)
    {
       $id = $request->get('id');
        $em = $this->getDoctrine()->getManager();
       $imageo = $em->getRepository('AcmeImageBundle:Image')->find($id);

            $em = $this->getDoctrine()->getManager();
            $image = $em->getRepository('AcmeImageBundle:Image')->find($id);
            $image = new \Acme\ImageBundle\Entity\Image();
            $image->setImage($image->getImage());
            $form = $this->createFormBuilder($image,array('action'=>'edit?id='.$id))
                ->add('image', 'file')
		->getForm();
		$form->handleRequest($request);
		$validator = $this->get('validator');
	  	$errors = $validator->validate($image);
		if (count($errors) > 0) {
                    //echo "invalid";
		}else{
                    if($request->isMethod('post')=='edit')
                    {
                        $f = $request->request->get('form');
                        $image = $this->getDoctrine()->getRepository('AcmeImageBundle:Image')->find($request->get('id'));
                        $image->setName($form['image']->getData()->getClientOriginalName());
                        $em->flush();
                        return $this->redirect($this->generateUrl('acme_image'));
                    }
		}
            return $this->render('AcmeImageBundle:Default:edit.html.twig', array('form' => $form->createView(),'image'=>       $imageo->getImage(),'id'=>$id));
    }
}
